-- custom/plugins/setup.lua

local M = {}

-- Function to set up LSP and completion
function M.setup()
  local lspconfig = require 'lspconfig'
  local cmp = require 'cmp'
  local capabilities = require('cmp_nvim_lsp').default_capabilities()

  -- LSP configurations
  lspconfig.pyright.setup {
    capabilities = capabilities,
  }

  lspconfig.ts_ls.setup { -- Updated from tsserver to ts_ls
    capabilities = capabilities,
  }

  lspconfig.gopls.setup {
    capabilities = capabilities,
  }

  lspconfig.rust_analyzer.setup {
    capabilities = capabilities,
  }

  lspconfig.lua_ls.setup { -- Updated from sumneko_lua to lua_ls
    capabilities = capabilities,
  }

  lspconfig.html.setup {
    capabilities = capabilities,
  }

  lspconfig.cssls.setup {
    capabilities = capabilities,
  }

  -- Autocompletion setup with nvim-cmp
  cmp.setup {
    snippet = {
      expand = function(args)
        -- Use Luasnip to expand snippets
        require('luasnip').lsp_expand(args.body)
      end,
    },
    mapping = {
      ['<C-p>'] = cmp.mapping.select_prev_item(),
      ['<C-n>'] = cmp.mapping.select_next_item(),
      ['<C-y>'] = cmp.mapping.confirm { select = true },
      ['<C-e>'] = cmp.mapping.close(), -- Optional: add a mapping to close the completion menu
    },
    sources = {
      { name = 'nvim_lsp' }, -- LSP source
      { name = 'buffer' }, -- Buffer source
      { name = 'path' }, -- Path source
      { name = 'luasnip' }, -- Luasnip source for snippets
    },
    formatting = {
      format = function(entry, vim_item)
        -- You can customize the formatting here if needed
        vim_item.kind = string.format('%s', vim_item.kind) -- Just return the kind as text
        return vim_item
      end,
    },
  }

  -- Check if the configuration is loaded correctly
  vim.cmd 'echo "Autocompletion Loaded"'
end

return M
